<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 白菜林</title>
    <link>https://3ae.cn/categories/linux/</link>
    <description>Recent content in Linux on 白菜林</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>baicai</copyright>
    <lastBuildDate>Fri, 22 Jul 2022 10:35:22 +0800</lastBuildDate><atom:link href="https://3ae.cn/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>删除 Debian Gnome 所有默认安装的游戏</title>
      <link>https://3ae.cn/article/2022/debian_gnome_remove_game/</link>
      <pubDate>Fri, 22 Jul 2022 10:35:22 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2022/debian_gnome_remove_game/</guid>
      <description>我用以下命令删除Debian 11.3（带有gnome）中的所有预装游戏：
sudo apt purge aisleriot gnome-sudoku mahjongg ace-of-penguins gnomine gbrainy gnome-sushi gnome-taquin gnome-tetravex gnome-robots gnome-chess lightsoff swell-foop quadrapassel &amp;amp;&amp;amp; sudo apt autoremove </description>
    </item>
    
    <item>
      <title>如何关闭 Ubuntu 中的开放端口？</title>
      <link>https://3ae.cn/article/2022/ubuntu_kill_port_porc/</link>
      <pubDate>Sun, 19 Jun 2022 22:53:02 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2022/ubuntu_kill_port_porc/</guid>
      <description>如何关闭 Ubuntu 中的开放端口？
问题描述 列出所有打开的端口，以关闭一些应用程序的端口。
最佳办法 如果要关闭端口，则必须终止进程或停止相关服务。 可以使用 netstat -nalp 和 lsof -i:port 工具来识别打开端口后面的进程/二进制文件。
netstat 可用于查看端口统计信息。 要显示所有开放端口的列表：
sudo netstat -lnp 列出所有侦听端口号以及每个负责的进程。终止或终止进程以关闭端口。 ( kill , pkill …)
关闭一个打开的端口：
sudo fuser -k port_no/tcp 例子：
sudo fuser -k 8080/tcp 次佳办法 要在 ubuntu 中关闭开放端口，可以使用以下命令
sudo kill $(sudo lsof -t -i:3000) 代替 3000 你可以指定你的端口号
lsof 命令将提供有关进程打开的文件的信息
-t ：此标志指定 lsof 应仅生成带有进程标识符且没有标头的简洁输出 – 例如，以便可以将输出通过管道传输到 kill(1)。此选项选择 -w 选项。
-i ：此标志选择任何 Internet 地址与 i 中指定的地址匹配的文件列表。如果未指定地址，此选项将选择所有 Internet 和 x.25 (HP-UX) 网络文件的列表。</description>
    </item>
    
    <item>
      <title>上传公钥实现ssh登录</title>
      <link>https://3ae.cn/article/2022/linux_ssh_copy_id/</link>
      <pubDate>Sat, 12 Mar 2022 20:22:55 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2022/linux_ssh_copy_id/</guid>
      <description>生成密钥和公钥 如果之前已经存在就不用重新生成了
$ ssh-keygen -t rsa 上传公钥 $ ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.0.1 其中root 服务器用户， 192.168.0.1 是服务器ip。之后按照提示输入密码即可
连接到服务器 直接使用ssh直接连接服务器，无需输入密码
$ ssh root@192.168.0.1 </description>
    </item>
    
    <item>
      <title>在 Linux 命令行中使用的 6 个元字符</title>
      <link>https://3ae.cn/article/2022/linux_metacharacters/</link>
      <pubDate>Mon, 14 Feb 2022 17:37:24 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2022/linux_metacharacters/</guid>
      <description>在 Linux 命令行上使用元字符是提高生产力的一个好方法。 许多 Linux 电脑是无头运行的，你可以在命令行上完成所有的管理任务。它使用许多所有人都熟悉的基本命令，如 ls、ls-l、ls-l、cd、pwd、top 等等。
Linux 上的 Shell 元字符 你可以通过使用元字符来扩展这些命令。
管道符 | 假设我想知道我的系统上运行的 Firefox 的所有实例。我可以使用带有 -ef 参数的 ps 命令来列出我系统上运行的所有程序实例。现在我想只看那些涉及 Firefox 的实例。我使用了我最喜欢的元字符之一，管道符 |，将其结果送到 grep，用它来搜索模式：
$ ps -ef | grep firefox 输出重定向 &amp;gt; 另一个我最喜欢的元字符是输出重定向 &amp;gt;。我用它来打印 dmesg 命令结果中所有 AMD 相关的结果。你可能会发现这在硬件故障排除中很有帮助：
$ dmesg | grep amd &amp;gt; amd.txt $ cat amd.txt [ 0.897] amd_uncore: 4 amd_df counters detected [ 0.897] amd_uncore: 6 amd_l3 counters detected [ 0.898] perf/amd_iommu: Detected AMD IOMMU #0 (2 banks, 4 counters/bank).</description>
    </item>
    
    <item>
      <title>ubuntu上安装微信(wechat)</title>
      <link>https://3ae.cn/article/2022/ubuntu_wechat-install/</link>
      <pubDate>Sun, 30 Jan 2022 15:19:12 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2022/ubuntu_wechat-install/</guid>
      <description>介绍 由于微信官网 https://weixin.qq.com/ 没有linux版本的下载和安装方法，但微信确实提供了优麒麟发行版的官方版本，所以就有了下面的安装方法。
安装方法 打开优麒麟应用商店官网，然后下载应用，就看到微信了 https://www.ubuntukylin.com/applications/106-cn.html 下载deb包，用命令sudo dpkg -i ，就能安装上了，而且可以用。 这是linux原生的，功能少点，但比wine的要轻巧不少。
安装方法2 下载链接在方法1中，优麒麟应用商店微信应用页面右键 “64位下载” ——&amp;gt; “复制链接” 终端下载Deb安装：
wget -O ~/weixin.deb &amp;#34;http://archive.ubuntukylin.com/software/pool/partner/weixin_2.1.1_amd64.deb&amp;#34; sudo dpkg -i ~/weixin.deb </description>
    </item>
    
    <item>
      <title>Ubuntu使用systemd配置开机运行service</title>
      <link>https://3ae.cn/article/2021/ubuntu_systemd_service/</link>
      <pubDate>Wed, 01 Dec 2021 22:44:28 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/ubuntu_systemd_service/</guid>
      <description>systemd Systemd 是 Linux 系统工具，用来启动守护进程，已成为大多数发行版的标准配置。
由来 历史上，Linux 的启动一直采用init进程。
下面的命令用来启动服务。
$ sudo /etc/init.d/apache2 start # 或者 $ service apache2 start 这种方法有两个缺点。
一是启动时间长。init进程是串行启动，只有前一个进程启动完，才会启动下一个进程。
二是启动脚本复杂。init进程只是执行启动脚本，不管其他事情。脚本需要自己处理各种情况，这往往使得脚本变得很长。
Systemd 概述 Systemd 就是为了解决这些问题而诞生的。它的设计目标是，为系统的启动和管理提供一套完整的解决方案。
根据 Linux 惯例，字母d是守护进程（daemon）的缩写。 Systemd 这个名字的含义，就是它要守护整个系统。
使用了 Systemd，就不需要再用init了。Systemd 取代了initd，成为系统的第一个进程（PID 等于 1），其他进程都是它的子进程。
$ systemctl --version 上面的命令查看 Systemd 的版本。
使用 systemd 实现开机执行 Shell 脚本 通用操作步骤 创建希望开机马上执行的脚本，本文举例脚本存放位置为 /home/navxin/Example/startup.sh，脚本内容如下：
#!/bin/bash # 开机时在脚本的同级目录下创建一个名为 StartupTouch.txt 的文件 touch /home/navxin/Example/startup.sh.txt 开机执行的脚本需增加可执行权限才能被 systemd 运行，使用如下命令 chmod u+x /home/navxin/Example/startup.sh chmod g+x /home/navxin/Example/startup.sh 进入 systemd 放置 service 的目录，在该目录下可看到大量服务配置文件，命令如下 # 进入 systemd 的 service 目录 cd /usr/lib/systemd/system # 查看文件列表 ls -al 在该目录创建一个新的 .</description>
    </item>
    
    <item>
      <title>ubuntu上安装firefox</title>
      <link>https://3ae.cn/article/2021/ubuntu_firefox-install/</link>
      <pubDate>Wed, 29 Sep 2021 16:19:42 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/ubuntu_firefox-install/</guid>
      <description>卸载原来Firefox sudo apt-get purge firefox 或 sudo apt-get remove firefox
下载最新Firefox二进制压缩包 wget -O ~/firefox.tar.bz2 &amp;quot;https://download.mozilla.org/?product=firefox-latest&amp;amp;os=linux64&amp;quot; 解压并移动到/opt目录 sudo tar xjf ~/firefox.tar.bz2 -C /opt/ 创建软链接 sudo ln -s /opt/firefox/firefox /usr/lib/firefox/firefox 在/usr/lib/中创建一个firefox可执行链接文件，该文件指向/opt中firefox可执行主程序位置。
启动firefox 终端启动Firefox
firefox 创建桌面快捷方式 进入/usr/share/applications目录
touch firefox.desktop nano firefox.desktop 添加内容：
[Desktop Entry] Name=firefox Comment=firefox Exec=/opt/firefox/firefox Icon=/opt/firefox/browser/chrome/icons/default/default128.png Terminal=false Type=Application Categories=Application; Encoding=UTF-8 StartupNotify=true 卸载Firefox 通过上面方法安装的Firefox，如果想删除，可以在终端种输入以下命令：
sudo rm -rf /opt/firefox sudo rm /usr/share/applications/firefox.desktop </description>
    </item>
    
    <item>
      <title>使用 df 命令查看 Linux 上的可用磁盘空间</title>
      <link>https://3ae.cn/article/2021/check-disk-space-linux-df/</link>
      <pubDate>Wed, 04 Aug 2021 16:12:56 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/check-disk-space-linux-df/</guid>
      <description>磁盘空间已经不像计算机早期那样珍贵，但无论你有多少磁盘空间，总有耗尽的可能。计算机需要一些磁盘空间才能启动运行，所以为了确保你没有在无意间用尽了所有的硬盘空间，偶尔检查一下是非常必要的。在 Linux 终端，你可以用 df 命令来做这件事。
df 命令可以显示文件系统中可用的磁盘空间。
要想使输出结果易于阅读，你可以加上 &amp;ndash;human-readable（或其简写 -h）选项：
$ df --human-readable Filesystem Size Used Avail Use% Mounted on /dev/sda1 1.0T 525G 500G 52% / 在这个例子中，计算机的磁盘已经用了 52%，还有 500 GB 可用空间。
由于 Linux 从整体上看待所有挂载设备的文件系统，df 命令会展示出连接到计算机上的每个存储设备的详细信息。如果你有很多磁盘，那么输出结果将会反映出来：
$ df --human-readable Filesystem Size Used Avail Use% Mounted on /dev/root 110G 45G 61G 43% / devtmpfs 12G 0 12G 0% /dev tmpfs 12G 848K 12G 1% /run /dev/sda1 1.6T 1.3T 191G 87% /home /dev/sdb1 917G 184G 687G 22% /penguin /dev/sdc1 57G 50G 4.</description>
    </item>
    
    <item>
      <title>Linux 常用命令</title>
      <link>https://3ae.cn/article/2021/linux_cmd/</link>
      <pubDate>Sat, 05 Jun 2021 10:31:29 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/linux_cmd/</guid>
      <description>Linux 常用命令
日期 $(date -d &amp;#39;1 day ago&amp;#39; &amp;#39;+%Y-%m-%d&amp;#39;) 常用方法
数字格式化 part=`printf &amp;#34;%03d&amp;#34; $i` # 左补0 删除旧文件 # 找出5天前修改的文件名以.tar结尾的文件进行删除 find /www/backup -mtime +5 -name &amp;#34;*.tar&amp;#34; |xargs rm for循环 for ((i=0;i&amp;lt;10;i++)) do _date=$(date +%Y-%m-%d -d &amp;#34;${i} day&amp;#34;) echo $_date done # for i in {1..10} do echo $i done 文件合并 find ./ -name &amp;#34;item*&amp;#34; | xargs sed &amp;#39;a\&amp;#39; &amp;gt; all.txt find ./ -name &amp;#34;item*&amp;#34; | xargs cat &amp;gt; all.txt :s/old/new #替换当前行的第一个old为new :s/old/new/g #替换当前行的所有的old为new :.</description>
    </item>
    
  </channel>
</rss>
