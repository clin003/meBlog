<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Using Software on 白菜林</title>
    <link>https://3ae.cn/categories/using-software/</link>
    <description>Recent content in Using Software on 白菜林</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>baicai</copyright>
    <lastBuildDate>Sun, 30 Jan 2022 15:19:12 +0800</lastBuildDate><atom:link href="https://3ae.cn/categories/using-software/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ubuntu上安装微信(wechat)</title>
      <link>https://3ae.cn/article/2022/ubuntu_wechat-install/</link>
      <pubDate>Sun, 30 Jan 2022 15:19:12 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2022/ubuntu_wechat-install/</guid>
      <description>介绍 由于微信官网 https://weixin.qq.com/ 没有linux版本的下载和安装方法，但微信确实提供了优麒麟发行版的官方版本，所以就有了下面的安装方法。
安装方法 打开优麒麟应用商店官网，然后下载应用，就看到微信了 https://www.ubuntukylin.com/applications/106-cn.html 下载deb包，用命令sudo dpkg -i ，就能安装上了，而且可以用。 这是linux原生的，功能少点，但比wine的要轻巧不少。
安装方法2 下载链接在方法1中，优麒麟应用商店微信应用页面右键 “64位下载” ——&amp;gt; “复制链接” 终端下载Deb安装：
wget -O ~/weixin.deb &amp;#34;http://archive.ubuntukylin.com/software/pool/partner/weixin_2.1.1_amd64.deb&amp;#34; sudo dpkg -i ~/weixin.deb </description>
    </item>
    
    <item>
      <title>Ubuntu使用systemd配置开机运行service</title>
      <link>https://3ae.cn/article/2021/ubuntu_systemd_service/</link>
      <pubDate>Wed, 01 Dec 2021 22:44:28 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/ubuntu_systemd_service/</guid>
      <description>systemd Systemd 是 Linux 系统工具，用来启动守护进程，已成为大多数发行版的标准配置。
由来 历史上，Linux 的启动一直采用init进程。
下面的命令用来启动服务。
$ sudo /etc/init.d/apache2 start # 或者 $ service apache2 start 这种方法有两个缺点。
一是启动时间长。init进程是串行启动，只有前一个进程启动完，才会启动下一个进程。
二是启动脚本复杂。init进程只是执行启动脚本，不管其他事情。脚本需要自己处理各种情况，这往往使得脚本变得很长。
Systemd 概述 Systemd 就是为了解决这些问题而诞生的。它的设计目标是，为系统的启动和管理提供一套完整的解决方案。
根据 Linux 惯例，字母d是守护进程（daemon）的缩写。 Systemd 这个名字的含义，就是它要守护整个系统。
使用了 Systemd，就不需要再用init了。Systemd 取代了initd，成为系统的第一个进程（PID 等于 1），其他进程都是它的子进程。
$ systemctl --version 上面的命令查看 Systemd 的版本。
使用 systemd 实现开机执行 Shell 脚本 通用操作步骤 创建希望开机马上执行的脚本，本文举例脚本存放位置为 /home/navxin/Example/startup.sh，脚本内容如下：
#!/bin/bash # 开机时在脚本的同级目录下创建一个名为 StartupTouch.txt 的文件 touch /home/navxin/Example/startup.sh.txt 开机执行的脚本需增加可执行权限才能被 systemd 运行，使用如下命令 chmod u+x /home/navxin/Example/startup.sh chmod g+x /home/navxin/Example/startup.sh 进入 systemd 放置 service 的目录，在该目录下可看到大量服务配置文件，命令如下 # 进入 systemd 的 service 目录 cd /usr/lib/systemd/system # 查看文件列表 ls -al 在该目录创建一个新的 .</description>
    </item>
    
    <item>
      <title>ubuntu上安装firefox</title>
      <link>https://3ae.cn/article/2021/ubuntu_firefox-install/</link>
      <pubDate>Wed, 29 Sep 2021 16:19:42 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/ubuntu_firefox-install/</guid>
      <description>卸载原来Firefox sudo apt-get purge firefox  或 sudo apt-get remove firefox
下载最新Firefox二进制压缩包 wget -O ~/firefox.tar.bz2 &amp;quot;https://download.mozilla.org/?product=firefox-latest&amp;amp;os=linux64&amp;quot;  解压并移动到/opt目录 sudo tar xjf ~/firefox.tar.bz2 -C /opt/  创建软链接 sudo ln -s /opt/firefox/firefox /usr/lib/firefox/firefox  在/usr/lib/中创建一个firefox可执行链接文件，该文件指向/opt中firefox可执行主程序位置。
启动firefox 终端启动Firefox
firefox  创建桌面快捷方式 进入/usr/share/applications目录
touch firefox.desktop nano firefox.desktop  添加内容：
[Desktop Entry] Name=firefox Comment=firefox Exec=/opt/firefox/firefox Icon=/opt/firefox/browser/chrome/icons/default/default128.png Terminal=false Type=Application Categories=Application; Encoding=UTF-8 StartupNotify=true  卸载Firefox 通过上面方法安装的Firefox，如果想删除，可以在终端种输入以下命令：
sudo rm -rf /opt/firefox sudo rm /usr/share/applications/firefox.desktop  </description>
    </item>
    
    <item>
      <title>如何知道谁在ping我？</title>
      <link>https://3ae.cn/article/2021/tcpdump_icmp-echo/</link>
      <pubDate>Sat, 28 Aug 2021 21:14:41 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/tcpdump_icmp-echo/</guid>
      <description>tcpdump 是 Linux 上可用的最强大和使用最广泛的 命令行 数据包嗅探器(包分析器)工具。
 在您要监控的计算机的终端应用程序中：
sudo tcpdump -i ethX icmp and icmp[icmptype]=icmp-echo 选项：
-n avoid a (potentially slow) reverse DNS query −i interface icmp[icmptype]=icmp-echo To print all ICMP packets that are echo requests/replies 它将开始侦听 ethX 并等待到达的数据包。
示例：我有 2 台 pc win7 192.168.0.8 , Ubuntu 192.168.0.57 它将监控到达的数据包： 在Win上：
ping 192.168.0.57 在 Ubuntu 上：
tcpdump -i eth0 icmp and icmp[icmptype]=icmp-echo -n 参考：nixCraft[1]</description>
    </item>
    
    <item>
      <title>使用 df 命令查看 Linux 上的可用磁盘空间</title>
      <link>https://3ae.cn/article/2021/check-disk-space-linux-df/</link>
      <pubDate>Wed, 04 Aug 2021 16:12:56 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/check-disk-space-linux-df/</guid>
      <description>磁盘空间已经不像计算机早期那样珍贵，但无论你有多少磁盘空间，总有耗尽的可能。计算机需要一些磁盘空间才能启动运行，所以为了确保你没有在无意间用尽了所有的硬盘空间，偶尔检查一下是非常必要的。在 Linux 终端，你可以用 df 命令来做这件事。
df 命令可以显示文件系统中可用的磁盘空间。
要想使输出结果易于阅读，你可以加上 &amp;ndash;human-readable（或其简写 -h）选项：
$ df --human-readable Filesystem Size Used Avail Use% Mounted on /dev/sda1 1.0T 525G 500G 52% / 在这个例子中，计算机的磁盘已经用了 52%，还有 500 GB 可用空间。
由于 Linux 从整体上看待所有挂载设备的文件系统，df 命令会展示出连接到计算机上的每个存储设备的详细信息。如果你有很多磁盘，那么输出结果将会反映出来：
$ df --human-readable Filesystem Size Used Avail Use% Mounted on /dev/root 110G 45G 61G 43% / devtmpfs 12G 0 12G 0% /dev tmpfs 12G 848K 12G 1% /run /dev/sda1 1.6T 1.3T 191G 87% /home /dev/sdb1 917G 184G 687G 22% /penguin /dev/sdc1 57G 50G 4.</description>
    </item>
    
    <item>
      <title>Ubuntu安装 Zlib</title>
      <link>https://3ae.cn/article/2021/zlib/</link>
      <pubDate>Mon, 12 Jul 2021 21:01:31 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/zlib/</guid>
      <description>如果你尝试在 Ubuntu 上安装 zlib，它会抛出 “unable to locate package zlib” 错误。
 Zlib 是一个用于数据压缩的开源库。
作为使用者，你可能会遇到需要安装 zlib（或 zlib-devel 包）作为另一个应用程序的依赖项的情况。
但问题来了，如果你尝试在 Ubuntu 上安装 zlib，它会抛出 “unable to locate package zlib” 错误。
sudo apt install zlib Reading package lists... Done Building dependency tree Reading state information... Done E: Unable to locate package zlib 为什么会看到这个 Ubable to locate package 错误呢？因为没有名为 zlib 的包。
如果你 使用 apt search 命令，你会发现有几个包可以让你安装：zlib 1g 和 zlib 1g-dev。当你知道这些后，只需一个 apt 命令就可以安装它们。
在基于 Ubuntu 的 Linux 发行版上安装 Zlib 打开终端，使用以下命令：</description>
    </item>
    
    <item>
      <title>Ubuntu安装 qbittorrent-nox并启动</title>
      <link>https://3ae.cn/article/2021/qbittorrent/</link>
      <pubDate>Fri, 02 Jul 2021 21:01:31 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/qbittorrent/</guid>
      <description>Qbittorrent-Nox 要在Linux上使用Qbittorrent Web UI，你无需安装完整的Qbittorent桌面应用程序，有一个基于终端的Qbittorrent应用程序可用，它被称为Qbittorrent-Nox。
注意：Web UI功能不仅限于Qbittorrent-Nox应用程序，此功能还可以与传统的Qbittorent Linux桌面应用程序一起使用
安装qbittorrent 安装add-apt-repository命令 sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install software-properties-common -y 添加qbittorrent-nox的PPA软件源 sudo add-apt-repository ppa:qbittorrent-team/qbittorrent-stable 安装qbittorrent-nox（webui版） sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install qbittorrent-nox 设置开机启动 通过rc.local完成 如果是Ubuntu-16.10及其之后的版本需要先按下面的文章完成设置后，开机启动才会生效
Ubuntu-18.04设置开机启动脚本 起因Ubuntu-16.10（不包括）之前的版本使用的是update-rc.d以及rc.local等方法设置开机启&amp;hellip;
编辑rc.local脚本
nano /etc/rc.local 在exit 0前面（前一行）添加以下内容并保存
qbittorrent-nox -d 通过创建自定义服务实现 创建系统服务
sudo apt-get install nano -y &amp;amp;&amp;amp; nano /etc/systemd/system/qbittorrent-nox.service 粘贴以下内容，并保存。
[Unit] Description=qBittorrent-nox After=network.target [Service] User=root Type=simple RemainAfterExit=yes ExecStart=/usr/bin/qbittorrent-nox -d [Install] WantedBy=multi-user.target 启动qbittorrent-nox并创建服务配置
systemctl start qbittorrent-nox 设置开机自动启动qbittorrent-nox</description>
    </item>
    
    <item>
      <title>MAC命令快速模糊查找文件</title>
      <link>https://3ae.cn/article/2021/mac_find/</link>
      <pubDate>Sun, 27 Jun 2021 10:04:44 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/mac_find/</guid>
      <description>find命令 描述：通过 find命令查找 语法：find ~ -iname “文件名*”
/** * 比如我要查找一个以‘vue-’开头的.zip文件, * 但是你忘了它的全名也忘了在那个文件夹， * 查找范围是‘～’节点以内 * 就可以用这种方式进行模糊搜索 */ find ~ -iname &amp;#34;vue-*.zip&amp;#34; /** * 然后它就把所有包含符合条件的文件和路径都打印出来了 */ find不但能查找文件，还能查找文件夹
/** * 比如我要查找所有包含‘vue’的文件或文件夹 */ find ~ -iname &amp;#34;*vue*&amp;#34; /** * 结果它找到了所有包含‘vue’的文件或文件夹 */ find方式很简单但是需要一点专业知识，需要知道一些正则的基本常识，需要指定路径范围，搜索的名字需要加引号等等
mdfind命令 描述：通过 mdfind命令查找 语法：mdfind -name 文件名
/** * 比如我要查找所有包含‘vue’的文件或文件夹 */ mdfind -name vue /** * 看，我直接输入我要找的关键字‘vue’ * 就把所有文件和文件夹都输出出来了，是不是很方便 */ mdfind 简单粗暴，没缺点，但有个前提是你mac电脑要支持Spotlight功能，不过也不用担心，一般mac默认是支持的
在 shell 中执行命令  你是找到这个文件或文件夹了，但是你想直接打开它，那么怎么打开呢，看下面
 若要运行当前用户个人文件夹中的命令，请在前面加上文件夹说明符。例如，若要运行 MyCommandLineProg，请使用以下命令：
% ~/MyCommandLineProg 若要打开一个 App，请使用打开命令：</description>
    </item>
    
    <item>
      <title>用 Deskreen 将你的 Linux 屏幕镜像或串流到任何设备上</title>
      <link>https://3ae.cn/article/2021/linux_deskreen/</link>
      <pubDate>Mon, 21 Jun 2021 19:50:25 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/linux_deskreen/</guid>
      <description>如果你有多显示器设置，你会意识到拥有多个屏幕的好处。而且，有了 Deskreen，你可以把任何设备变成你的副屏。
 Deskreen：将任何设备变成你的 Linux 系统的副屏 Deskreen 是一个自由开源的应用，可以让你使用任何带有 Web 浏览器的设备来作为电脑的副屏。
如果你愿意，它还支持多个设备连接。
Deskreen 很容易使用，当你的所有设备都连接到同一个 Wi-Fi 网络时，它可以正常工作。
让我们来看看它的功能和工作原理。 Deskreen 的功能
Deskreen 的功能包括以下要点：
 分享整个屏幕的能力 选择一个特定的应用窗口进行串流 翻转模式，将你的屏幕作为提词器使用 支持多种设备 高级视频质量设置 提供端对端加密 最小的系统要求 黑暗模式  没有一个冗长的功能列表，但对大多数用户来说应该是足够的。
如何使用 Deskreen 应用？ Deskreen 使用分为三个简单的步骤，让我为你强调一下，以便你开始使用：
首先，当你启动该应用时，它会显示一个二维码和一个 IP 地址，以帮助你用 Web 浏览器连接其他设备，以串流你的屏幕。
你可以按你喜欢的方式，在你的辅助设备上的 Web 浏览器的帮助下建立连接。
当你扫描二维码或在浏览器的地址栏中输入 IP 地址，你会在 Deskreen 应用上得到一个提示，允许或拒绝连接。除非是你不认识它，否则就允许吧。
接下来，你将被要求选择你想要串流的内容（你的整个屏幕或特定的应用窗口）：
你可以选择串流整个屏幕或选择你想串流的窗口。然而，并不是每个应用窗口都能被检测到。
你只需要选择源并确认，就可以了。你应该注意到它在你的副屏（手机/桌面）上开始串流。
Deskreen 还为你提供了管理连接设备的能力。因此，如果你需要断开任何会话或所有会话的连接，你可以从设置中进行操作。
在 Linux 中安装 Deskreen 你会找到一个用于 Linux 机器的 DEB 包和 AppImage 文件。如果你不知道，可以通过我们的 安装 DEB 包 和 使用 AppImage 文件 指南来安装它。</description>
    </item>
    
    <item>
      <title>Linux 常用命令</title>
      <link>https://3ae.cn/article/2021/linux_cmd/</link>
      <pubDate>Sat, 05 Jun 2021 10:31:29 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/linux_cmd/</guid>
      <description>Linux 常用命令
日期 $(date -d &amp;#39;1 day ago&amp;#39; &amp;#39;+%Y-%m-%d&amp;#39;) 常用方法
数字格式化 part=`printf &amp;#34;%03d&amp;#34; $i` # 左补0 删除旧文件 # 找出5天前修改的文件名以.tar结尾的文件进行删除 find /www/backup -mtime +5 -name &amp;#34;*.tar&amp;#34; |xargs rm for循环 for ((i=0;i&amp;lt;10;i++)) do _date=$(date +%Y-%m-%d -d &amp;#34;${i}day&amp;#34;) echo $_date done # for i in {1..10} do echo $i done 文件合并 find ./ -name &amp;#34;item*&amp;#34; | xargs sed &amp;#39;a\&amp;#39; &amp;gt; all.txt find ./ -name &amp;#34;item*&amp;#34; | xargs cat &amp;gt; all.txt :s/old/new #替换当前行的第一个old为new :s/old/new/g #替换当前行的所有的old为new :.</description>
    </item>
    
    <item>
      <title>awk 分析 nginx 运行日志常用指令</title>
      <link>https://3ae.cn/article/2021/awk-nginx-access_log/</link>
      <pubDate>Sat, 05 Jun 2021 10:16:16 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/awk-nginx-access_log/</guid>
      <description>awk 分析 nginx 运行日志常用指令
1.独立IP
awk &amp;#39;{print $1}&amp;#39; access.log | sort -r |uniq -c | wc -l 2.统计PV
awk &amp;#39;{print $6}&amp;#39; access.log | wc -l 3.查询访问最频繁的URL
awk &amp;#39;{print $7}&amp;#39; access.log|sort | uniq -c |sort -n -k 1 -r|more 4.查询访问最频繁的IP
awk &amp;#39;{print $1}&amp;#39; access.log|sort | uniq -c |sort -n -k 1 -r|more 5.UV统计：
awk &amp;#39;{print $6}&amp;#39; access.log | sort -r |uniq -c |wc -l 6.按小时统计
cat access.log |awk &amp;#39;{print $4}&amp;#39; | awk -F &amp;#39;:&amp;#39; &amp;#39;{print $1,$2}&amp;#39;|uniq -c | awk &amp;#39;{print $2&amp;#34; &amp;#34;$3&amp;#34; &amp;#34;$1}&amp;#39; </description>
    </item>
    
    <item>
      <title>使用开源工具进行 Linux 内存取证</title>
      <link>https://3ae.cn/article/2021/linux-memory-forensics/</link>
      <pubDate>Wed, 26 May 2021 12:57:28 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/linux-memory-forensics/</guid>
      <description>利用 Volatility 找出应用程序、网络连接、内核模块、文件等方面的情况。
 计算机的操作系统和应用使用主内存（RAM）来执行不同的任务。这种易失性内存包含大量关于运行应用、网络连接、内核模块、打开的文件以及几乎所有其他的内容信息，但这些信息每次计算机重启的时候都会被清除。
内存取证是一种从内存中找到和抽取这些有价值的信息的方式。Volatility 是一种使用插件来处理这类信息的开源工具。但是，存在一个问题：在你处理这些信息前，必须将物理内存转储到一个文件中，而 Volatility 没有这种能力。
因此，这篇文章分为两部分：
 第一部分是处理获取物理内存并将其转储到一个文件中。 第二部分使用 Volatility 从这个内存转储中读取并处理这些信息。  我在本教程中使用了以下测试系统，不过它可以在任何 Linux 发行版上工作：
$ cat /etc/redhat-release Red Hat Enterprise Linux release 8.3 (Ootpa) $ $ uname -r 4.18.0-240.el8.x86_64 $ 注意事项： 部分 1 涉及到编译和加载一个内核模块。不要担心：它并不像听起来那么困难。 一些指南： 按照以下的步骤。 不要在生产系统或你的主要计算机上尝试任何这些步骤。 始终使用测试的虚拟机（VM）来尝试，直到你熟悉使用这些工具并理解它们的工作原理为止。  安装需要的包 在开始之前安装必要的工具。如果你经常使用基于 Debian 的发行版，可以使用 apt-get 命令。这些包大多数提供了需要的内核信息和工具来编译代码：
$ yum install kernel-headers kernel-devel gcc elfutils-libelf-devel make git libdwarf-tools python2-devel.x86_64-y 部分 1：使用 LiME 获取内存并将其转储到一个文件中 在开始分析内存之前，你需要一个内存转储供你使用。在实际的取证活动中，这可能来自一个被破坏或者被入侵的系统。这些信息通常会被收集和存储来分析入侵是如何发生的及其影响。由于你可能没有可用的内存转储，你可以获取你的测试 VM 的内存转储，并使用它来执行内存取证。
Linux 内存提取器（LiME）是一个在 Linux 系统上获取内存很常用的工具。使用以下命令获得 LiME：</description>
    </item>
    
    <item>
      <title>使用 sed 命令进行复制、剪切和粘贴</title>
      <link>https://3ae.cn/article/2021/linux_sed/</link>
      <pubDate>Mon, 24 May 2021 00:39:20 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/linux_sed/</guid>
      <description>很少有 Unix 命令像 sed、grep 和 awk 一样出名，它们经常组合在一起，可能是因为它们具有奇怪的名称和强大的文本解析能力。它们还在一些语法和逻辑上有相似之处。虽然它们都能用于文本解析，但都有其特殊性。本文研究 sed 命令，它是一个 流编辑器。
 安装 sed 如果你使用的是 Linux、BSD 或 macOS，那么它们已经安装了 GNU 的或 BSD 的 sed。这些是原始 sed 命令的独特重新实现。虽然它们很相似，但也有一些细微的差别。本文已经在 Linux 和 NetBSD 版本上进行了测试，所以你可以使用你的计算机上找到的任何 sed，但是对于 BSD sed，你必须使用短选项（例如 -n 而不是 &amp;ndash;quiet）。
GNU sed 通常被认为是功能最丰富的 sed，因此无论你是否运行 Linux，你可能都想要尝试一下。如果在 Ports 树中找不到 GNU sed（在非 Linux 系统上通常称为 gsed），你可以从 GNU 网站 下载源代码。 安装 GNU sed 的好处是，你可以使用它的额外功能，但是如果需要可移植性，还可以限制它以遵守 sed 的 POSIX 规范。
MacOS 用户可以在 MacPorts 或 Homebrew 上找到 GNU sed。
在 Windows 上，你可以通过 Chocolatey 来 安装 GNU sed。</description>
    </item>
    
    <item>
      <title>Linux/Mac 使用 GNU Screen 的小技巧</title>
      <link>https://3ae.cn/article/2021/linux_screen/</link>
      <pubDate>Thu, 13 May 2021 12:50:05 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/linux_screen/</guid>
      <description>学习基本的 GNU Screen 终端复用技术，然后下载我们的终端命令备忘录，以便你能够熟悉常用的快捷方式。
 对于一般用户而言，命令行终端窗口可能是令人困惑和神秘的。但随着你对 Linux 终端的进一步了解，你很快就会意识到它的高效和强大。不过，也不需要很长时间，你就会想让终端变得更加高效，除了将更多的终端放到你的终端，还有什么高好的方法能够提升你的终端效率呢？
终端复用 终端的许多优点之一是它是一个集中控制的界面。它是一个能让你访问数百个应用程序的窗口，而你与每一个应用程序进行交互所需要的只是一个键盘。但是，现代计算机几乎总是有多余的处理能力，而且现代计算机专家喜欢多任务处理，导致一个窗口处理数百个应用程序的能力是相当有限的。
解决这一问题的常见答案是终端复用：即将虚拟终端叠放在一起，然后在它们之间移动的能力。通过终端复用器，你保持了集中控制，但是当你进行多任务时，你能够进行终端切换。更好的是，你能够在终端中拆分屏幕，使得在同一时间显示多个屏幕窗口。
选择合适的复用器 一些终端提供类似的功能，有标签式界面和分割式视图，但也有细微的差别。首先，这些终端的功能依赖于图形化的桌面环境。其次，许多图形化的终端功能需要鼠标交互或使用不方便的键盘快捷键。终端复用器的功能在文本控制台上和在图形桌面上一样好用，而且键位绑定是针对常见的终端序列设计的，很方便。
现有两种流行的复用器：tmux 和 GNU Screen。尽管你与它们互动的方式略有不同，但它们做同样的事情，而且大多具有相同的功能。这篇文章是 GNU Screen 的入门指南。关于 tmux 的相关介绍，请阅读 Kevin Sonney 的 tmux 介绍。
使用 GNU Screen GNU Screen 的基本用法很简单，通过 screen 命令启动，你将进入 Screen 会话的第 0 个窗口。在你决定需要一个新的终端提示符前，你可能很难注意到有什么变化。
当一个终端窗口被某项活动占用（比如，你启动了文本编辑器 Vim 或 Jove 或者你在处理音视频，或运行批处理任务），你可以新建一个窗口。要打开一个新的窗口，按 Ctrl+A，释放，然后按 c。这将在你现有窗口的基础上创建一个新的窗口。
你会知道当前你是在一个新的窗口中，因为你的终端除了默认的提示符外，似乎没有任何东西。当然，你的另一个终端仍然存在，它只是躲在新窗口的后面。要遍历打开的窗口，按 Ctrl+A，释放，然后按 n（表示下一个）或按 p（表示上一个）。在只打开两个窗口的情况下， n 和 p 的功能是一样的，但你可以随时打开更多的窗口（Ctrl+A，然后 c ），并在它们之间切换。
分屏 GNU Screen 的默认行为更像移动设备的屏幕，而不是桌面：你一次只能看到一个窗口。如果你因为喜欢多任务而使用 GNU Screen ，那么只关注一个窗口可能看起来是一种退步。幸运的是，GNU Screen 可以让你把终端分成窗口中的窗口。
要创建一个水平分割窗口，按 Ctrl+A，然后按 s 。这将把一个窗口置于另一个窗口之上，就像窗格一样。然而，在你告诉它要显示什么之前，分割的空间是没有用途的。因此，在创建一个分割窗后，你可以用 Ctrl+A ，然后用 Tab 移动到分割窗中。一旦进入，使用 Ctrl+A 然后 n 浏览所有可用的窗口，直到你想显示的内容出现在分割窗格中。</description>
    </item>
    
    <item>
      <title>使用 cron 调度自动化任务</title>
      <link>https://3ae.cn/article/2021/linux_cron/</link>
      <pubDate>Wed, 12 May 2021 18:59:21 +0800</pubDate>
      
      <guid>https://3ae.cn/article/2021/linux_cron/</guid>
      <description>cron 是一个调度守护进程，它以指定的时间间隔执行任务，这些任务称为 corn 作业，主要用于自动执行系统维护或管理任务。例如，你可以设置一个 cron 作业来自动执行重复的任务，比如备份数据库或数据，使用最新的安全补丁更新系统，检查磁盘空间使用情况，发送电子邮件等等。 cron 作业可以按分钟、小时、日、月、星期或它们的任意组合运行。
 cron 的一些优点 以下是使用 cron 作业的一些优点：
你可以更好地控制作业的运行时间。例如，你可以精确到分钟、小时、天等。 它消除了为循环任务逻辑而去写代码的需要，当你不再需要执行任务时，可以直接关闭它。 作业在不执行时不会占用内存，因此你可以节省内存分配。 如果一个作业执行失败并由于某种原因退出，它将在适当的时间再次运行。  安装 cron 守护进程 幸运的是，Fedora Linux 预先配置了运行重要的系统任务来保持系统更新，有几个实用程序可以运行任务例如 cron、anacron、at 和 batch 。本文只关注 cron 实用程序的安装。cron 和 cronie 包一起安装，cronie 包也提供 cron 服务。
要确定软件包是否已经存在，使用 rpm 命令： $ rpm -q cronie Cronie-1.5.2-4.el8.x86_64
如果安装了 cronie ，它将返回 cronie 包的全名。如果你的系统中没有安装，则会显示未安装。
使用以下命令安装： $ dnf install cronie
运行 cron 守护进程 cron 作业由 crond 服务来执行，它会读取配置文件中的信息。在将作业添加到配置文件之前，必须启动 crond 服务，或者安装它。什么是 crond 呢？crond 是 cron 守护程序的简称。要确定 crond 服务是否正在运行，输入以下命令：</description>
    </item>
    
  </channel>
</rss>
